#pragma once
#include "BaseClass.h"
#include "AddOn.h"
#include "Transform.h"
#include <string>

class aeGameObject;

/************************************************************************************************************************/
/* Definitions                                                        													*/
/************************************************************************************************************************/

/**********************************************************************************************//**
 * @typedef	std::vector<aeAddOn*> aeAddOns
 *
 * @brief	Defines an alias representing the add ons vector.
 **************************************************************************************************/

typedef std::vector<aeGameObject*> aeChildren;

/**********************************************************************************************//**
 * @class	aeGameObject
 *
 * @brief	A game object.
 **************************************************************************************************/

class aeGameObject : public aeBaseClass
{
	/************************************************************************************************************************/
	/* Constructors declaration                                            													*/
	/************************************************************************************************************************/
public:
	aeGameObject();
	virtual ~aeGameObject();

	/************************************************************************************************************************/
	/* Variable declaration									                												*/
	/************************************************************************************************************************/
public:
	bool Derivative;

	aeTransform Transform;

	aeString Name;
	aeString Tag;

	aeAddOns AddOns;
	aeChildren Children;

	/************************************************************************************************************************/
	/* Functions declaration                                            													*/
	/************************************************************************************************************************/
public:

	/**********************************************************************************************//**
	 * @fn	virtual int aeGameObject::Init();
	 *
	 * @brief	Initializes this object, returns 0 in case of a correct initialization.
	 *
	 * @return	An int.
	 **************************************************************************************************/

	virtual int Init();

	/**********************************************************************************************//**
	 * @fn	virtual void aeGameObject::Update(float fDelta);
	 *
	 * @brief	Updates given fDelta.
	 *
	 * @param	fDelta	The delta.
	 **************************************************************************************************/

	virtual void Update(float fDelta);

	/**********************************************************************************************//**
	 * @fn	virtual void aeGameObject::Render(aeRenderer * pRenderer);
	 *
	 * @brief	Renders this object given its given renderer pointer.
	 *
	 * @param [in,out]	pRenderer	If non-null, the renderer.
	 **************************************************************************************************/

	virtual void Render(aeRenderer * pRenderer);

	/**********************************************************************************************//**
	 * @fn	virtual void aeGameObject::Destroy();
	 *
	 * @brief	Destroys this object.
	 **************************************************************************************************/

	virtual void Destroy();
};


